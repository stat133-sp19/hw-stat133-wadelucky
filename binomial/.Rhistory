bin_probability(success = 2, trials = 5, prob = 0.5)
bin_probability <- function(success,trials,prob){
if(check_trials(trials)!=TRUE){
stop("invalid trials value")
}
if(check_prob(prob)!=TRUE){
stop("invalid prob value")
}
if(check_success(success,trials)!=TRUE){
stop("invalid success value")
}
return(bin_choose(trials,success)*prob^success*(1-prob)^(trials-success))
}
bin_probability(success = 2, trials = 5, prob = 0.5)
bin_probability(success = 0:2, trials = 5, prob = 0.5)
bin_probability(success = 55, trials = 100, prob = 0.45)
rep(1:3,3)
1:10
c(1:10)
a<-1:10
a
0:5
hello<-1:10
world<-11:20
data.frame(rbind(hello,world))
rbind(hello,world)
c(hello,world)
data.frame(hello,world)
bin_distribution <- function(trials,prob){
success<-0:trials
probability<-bin_probability(success,trials,prob)
rslt<-data.frame(success,probability)
class(rslt)<-"bindis"
rslt
}
#' @export
plot.bindis <- function(x,...){
barplot(x)
}
bin_distribution(trials = 5, prob = 0.5)
bin_distribution <- function(trials,prob){
success<-0:trials
probability<-bin_probability(success,trials,prob)
rslt<-data.frame(success,probability)
class(rslt)<-"bindis"
return(rslt)
}
bin_distribution(trials = 5, prob = 0.5)
success
bin_distribution <- function(trials,prob){
success<-0:trials
probability<-bin_probability(success,trials,prob)
rslt<-data.frame(success,probability)
#class(rslt)<-"bindis"
return(rslt)
}
bin_distribution(trials = 5, prob = 0.5)
bin_distribution <- function(trials,prob){
success<-0:trials
probability<-bin_probability(success,trials,prob)
rslt<-data.frame(success,probability)
class(rslt)<-"bindis"
return(rslt)
}
bin_distribution(trials = 5, prob = 0.5)
dis1 <- bin_distribution(trials = 5, prob = 0.5) plot(dis1)
dis1 <- bin_distribution(trials = 5, prob = 0.5)plot(dis1)
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
?barplot
barplot(1:10)
barplot(10:20)
plot.bindis <- function(x,...){
barplot(x$probability)
}
plot(dis1)
#' @export
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(data=rslt,aes(x=success,y=probability))+
geom_bar()+
xlab("successes")+
ylab(probability)
}
plot(dis1)
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(data=rslt,aes(x=success,y=probability))+
geom_bar()+
xlab("successes")+
ylab("probability")
}
plot(dis1)
dis1
plot(dis1)
plot.bindis <- function(x,...){
library(ggplot2)
ggplot(data=x,aes(x=success,y=probability))+
geom_bar()+
xlab("successes")+
ylab("probability")
}
plot(dis1)
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
geom_bar()+
xlab("successes")+
ylab("probability")
}
plot(dis1)
class(dis1)
bin_distribution <- function(trials,prob){
success<-0:trials
probability<-bin_probability(success,trials,prob)
rslt<-data.frame(success,probability)
class(rslt)<-c("bindis","data.frame")
return(rslt)
}
#' @export
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
geom_bar()+
xlab("successes")+
ylab("probability")
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
dis1
plot(dis1)
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
#geom_bar()+
xlab("successes")+
ylab("probability")
}
plot(dis1)
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
geom_bar(stat="identity")+
xlab("successes")+
ylab("probability")
}
plot(dis1)
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
geom_bar(stat="identity")+
xlab("successes")+
ylab("probability")+
theme_minimal()
}
plot(dis1)
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
geom_bar(stat="identity",color="grey")+
xlab("successes")+
ylab("probability")+
theme_minimal()
}
plot(dis1)
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
geom_bar(stat="identity",color="red")+
xlab("successes")+
ylab("probability")+
theme_minimal()
}
plot(dis1)
#' @export
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
geom_bar(stat="identity",fill="grey")+
xlab("successes")+
ylab("probability")+
theme_minimal()
}
plot(dis1)
plot.bindis <- function(rslt,...){
library(ggplot2)
ggplot(rslt,aes(x=success,y=probability))+
geom_bar(stat="identity",fill="grey")+
xlab("successes")+
ylab("probability")+
theme_minimal()+
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
}
plot(dis1)
barplot(dis1)
barplot(dis1$probability)
barplot(dis1$probability,xlab="successes",ylab="probability")
barplot(x=dis1$success,dis1$probability,xlab="successes",ylab="probability")
barplot(dis1$probability,xlab="successes",ylab="probability")
barplot(dis1$probability,xlab="successes",ylab="probability",names.arg = dis1$success)
bin_distribution <- function(trials,prob){
success<-0:trials
probability<-bin_probability(success,trials,prob)
rslt<-data.frame(success,probability)
class(rslt)<-c("bindis","data.frame")
return(rslt)
}
#' @export
plot.bindis <- function(rslt,...){
# library(ggplot2)
# ggplot(rslt,aes(x=success,y=probability))+
#   geom_bar(stat="identity",fill="grey")+
#   xlab("successes")+
#   ylab("probability")+
#   theme_minimal()+
#   theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
barplot(dis1$probability,xlab="successes",ylab="probability",names.arg = dis1$success)
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
plot(dis1)
plot(1:10)
plot(dis1)
bin_distribution <- function(trials,prob){
success<-0:trials
probability<-bin_probability(success,trials,prob)
rslt<-data.frame(success,probability)
class(rslt)<-c("bindis","data.frame")
rslt
}
#' @export
plot.bindis <- function(rslt,...){
# library(ggplot2)
# ggplot(rslt,aes(x=success,y=probability))+
#   geom_bar(stat="identity",fill="grey")+
#   xlab("successes")+
#   ylab("probability")+
#   theme_minimal()+
#   theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
barplot(dis1$probability,xlab="successes",ylab="probability",names.arg = dis1$success)
}
dis1 <- bin_distribution(trials = 5, prob = 0.5)
dis1
plot(dis1)
probability<-c(.1,.2,.3,.4)
probability
cumsum(probability)
bin_cumulative <- function(trials,prob){
success<-0:trials
probability<-bin_probability(success,trials,prob)
cumulative<-cumsum(probability)
rslt<-data.frame(success,probability,cumulative)
class(rslt)<-c("bincum","data.frame")
rslt
}
#' @export
plot.bincum <- function(rslt,...){
barplot(dis1$cumulative,xlab="successes",ylab="probability",names.arg = dis1$success)
}
dis2 <- bin_cumulative(trials = 5, prob = 0.5)
plot(dis2)
plot.bincum <- function(rslt,...){
barplot(rslt$cumulative,xlab="successes",ylab="probability",names.arg = dis1$success)
}
plot(dis2)
plot.bincum <- function(rslt,...){
plot(rslt$cumulative,xlab="successes",ylab="probability",names.arg = dis1$success)
}
plot(dis2)
plot.bincum <- function(rslt,...){
plot(rslt$cumulative,xlab="successes",ylab="probability",names.arg = dis1$success,type='l')
}
warnings()
plot.bincum <- function(rslt,...){
plot(rslt$cumulative,xlab="successes",ylab="probability",type='l')
}
plot(dis2)
plot.bincum <- function(rslt,...){
plot(rslt$cumulative,xlab="successes",ylab="probability",type='o')
}
plot(dis2)
#' @export
plot.bincum <- function(rslt,...){
plot(rslt$successes,rslt$cumulative,xlab="successes",ylab="probability",type='o')
}
plot(dis2)
plot.bincum <- function(rslt,...){
plot(rslt$success,rslt$cumulative,xlab="successes",ylab="probability",type='o')
}
plot(dis2)
print()
print("\n")
print(\n)
print("")
cat()
cat('1\n')
writeLines()
writeLines("\n")
bin_variable <- function(trials,prob){
if(check_trials(trials)&&check_prob(prob)){
rslt<-list(
trials=trials,
prob=prob
)
class(rslt)<-"binvar"
rslt
}else{
stop("invalid type of trials or prob")
}
}
#' @export
print.binvar <- function(rslt,...){
print("Binomial variable")
writeLines("\n")
print("Parameters")
print("- number of trials: ",rslt$trials)
print("- prob of success ",rslt$prob)
}
bin1 <- bin_variable(trials = 10, p = 0.3)
bin1
bin_variable <- function(trials,prob){
if(check_trials(trials)&&check_prob(prob)){
rslt<-list(
trials=trials,
prob=prob
)
class(rslt)<-"binvar"
rslt
}else{
stop("invalid type of trials or prob")
}
}
#' @export
print.binvar <- function(rslt,...){
print("Binomial variable")
writeLines("\n")
print("Parameters")
print("- number of trials: ",rslt$trials)
print("- prob of success ",rslt$prob)
}
#' @export
summary.binvar <- function(rslt,...){
temp<-list(
trials=rslt$trials,
prob=rslt$prob,
mean=aux_mean(rslt$trials,rslt$prob),
variance=aux_variance(rslt$trials,rslt$prob),
mode=aux_mode(rslt$trials,rslt$prob),
skewness=aux_skewness(rslt$trials,rslt$prob),
kurtosis=aux_kurtosis(rslt$trials,rslt$prob)
)
class(temp)="summary.binvar"
temp
}
#' @export
print.summary.binvar <- function(rslt,...){
print("Summary Binomial")
writeLines("\n")
print("Parameters")
print("- number of trials: ",rslt$trials)
print("- prob of success ",rslt$prob)
writeLines("\n")
print("- mean    : ",rslt$mean)
print("- variance: ",rslt$variance)
print("- mode    : ",rslt$mode)
print("- skewness: ",rslt$skewness)
print("- kurtosis: ",rslt$kurtosis)
}
bin1 <- bin_variable(trials = 10, p = 0.3)
bin1
print("???",3)
print("???%d",3)
bin_variable <- function(trials,prob){
if(check_trials(trials)&&check_prob(prob)){
rslt<-list(
trials=trials,
prob=prob
)
class(rslt)<-"binvar"
rslt
}else{
stop("invalid type of trials or prob")
}
}
#' @export
print.binvar <- function(rslt,...){
print("Binomial variable")
writeLines("\n")
print("Parameters")
print(paste("- number of trials:",rslt$trials))
print(paste("- prob of success :",rslt$prob))
}
#' @export
summary.binvar <- function(rslt,...){
temp<-list(
trials=rslt$trials,
prob=rslt$prob,
mean=aux_mean(rslt$trials,rslt$prob),
variance=aux_variance(rslt$trials,rslt$prob),
mode=aux_mode(rslt$trials,rslt$prob),
skewness=aux_skewness(rslt$trials,rslt$prob),
kurtosis=aux_kurtosis(rslt$trials,rslt$prob)
)
class(temp)="summary.binvar"
temp
}
#' @export
print.summary.binvar <- function(rslt,...){
print("Summary Binomial")
writeLines("\n")
print("Parameters")
print(paste("- number of trials:",rslt$trials))
print(paste("- prob of success :",rslt$prob))
writeLines("\n")
print(paste("- mean    :",rslt$mean))
print(paste("- variance:",rslt$variance))
print(paste("- mode    :",rslt$mode))
print(paste("- skewness:",rslt$skewness))
print(paste("- kurtosis:",rslt$kurtosis))
}
bin1 <- bin_variable(trials = 10, p = 0.3)
bin1
binsum1 <- summary(bin1)
aux_mean <- function(trials,prob){
return(trials*prob)
}
aux_variance <- function(trials,prob){
return(trials*prob*(1-prob))
}
aux_mode <- function(trials,prob){
return(floor(trials*prob+prob))
}
aux_kurtosis <- function(trials,prob){
return((1-6*prob*(1-prob))/trials*prob*(1-prob))
}
aux_skewness <- function(trials,prob){
return((1-2*prob)/sqrt(trials*prob*(1-prob)))
}
binsum1 <- summary(bin1)
binsum1
bin_kurtosis <- function(trials,prob){
if(check_trials(trials)&&check_prob(prob)){
return(aux_kurtosis(trials,prob))
}
}
bin_kurtosis(10, 0.3)
aux_kurtosis(10, 0.3)
aux_kurtosis <- function(trials,prob){
return((1-6*prob*(1-prob))/trials*prob*(1-prob))
}
aux_kurtosis(10, 0.3)
aux_kurtosis <- function(trials,prob){
return((1-6*prob*(1-prob))/(trials*prob*(1-prob)))
}
aux_kurtosis(10, 0.3)
bin_kurtosis(10, 0.3)
bin_mean <- function(trials,prob){
if(check_trials(trials)&&check_prob(prob)){
return(aux_mean(trials,prob))
}
}
bin_mean(10,0.3)
bin_mode(10,0.3)
bin_mode <- function(trials,prob){
if(check_trials(trials)&&check_prob(prob)){
return(aux_mode(trials,prob))
}
}
bin_mode(10,0.3)
bin_skewness <- function(trials,prob){
if(check_trials(trials)&&check_prob(prob)){
return(aux_skewness(trials,prob))
}
}
bin_skewness(10,0.3)
bin_variance <- function(trials,prob){
if(check_trials(trials)&&check_prob(prob)){
return(aux_variance(trials,prob))
}
}
bin_variance(10,0.3)
library(devtools)
devtools::build()
devtools::check_man()
library(binomial)
?bin_variable
devtools::test()
devtools::use_testthat()
devtools::usethis_testthat()
library(testthat)
expect_equal(TRUE,TRUE)
expect_equal(TRUE,FALSE)
bin_probability(2,5,0.5)
bin_distribution(5,0.5)
length(bin_distribution(5,0.5))
class(bin_distribution(5,0.5))
class(bin_distribution(5,0.5))==c("bindis","data.frame")
class(bin_distribution(5,0.5))==c("data.frame","bindis")
typeof(bin_distribution(5,0.5))
expect_type(bin_distribution(5,0.5),"list")
expect_equivalent(bin_distribution(7,0.2),1)
expect_error(bin_distribution(7,2))
bin_distribution(7,2)
length(bin_cumulative(100,0.5))
typeof(bin_cumulative(100,0.5))
expect_type(bin_cumulative(100,0.5),"list")
expect_error(bin_cumulative(100,2))
devtools::test()
devtools::test()
devtools::use_vignette()
devtools::use_vignette(introduction2binomial)
devtools::use_vignette("introduction2binomial")
devtools::build()
devtools::check_man()
